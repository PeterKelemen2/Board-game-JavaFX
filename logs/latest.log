05-24 17:48:13 [INFO] boardgame.EndScreenController.jsonReaderGSON() - Blue Player - won in 28 turns
05-24 17:48:13 [INFO] boardgame.EndScreenController.jsonReaderGSON() - Second Player - won in 245 turns
05-24 17:48:13 [INFO] boardgame.EndScreenController.jsonReaderGSON() - Third Player - won in 123 turns
05-24 17:48:13 [INFO] boardgame.StartScreenController.loadEndScreen() - End Scene loaded
05-24 17:48:14 [INFO] boardgame.EndScreenController.backToStart() - Back to Start Screen
05-24 17:48:15 [INFO] boardgame.BoardGameController.jsonReaderGSON() - Name: Blue Player, Score:28
05-24 17:48:15 [INFO] boardgame.BoardGameController.jsonReaderGSON() - Name: Second Player, Score:245
05-24 17:48:15 [INFO] boardgame.BoardGameController.jsonReaderGSON() - Name: Third Player, Score:123
05-24 17:48:15 [INFO] boardgame.BoardGameController.jsonReaderGSON() - Lista a jsonReaderGSON()-bol: [Blue Player:28, Second Player:245, Third Player:123]
05-24 17:48:15 [INFO] boardgame.BoardGameController.initialize() - Lista az initialize()-bol: [Blue Player:28, Second Player:245, Third Player:123]
05-24 17:48:15 [INFO] boardgame.BoardGameController.initialize() - Board initialized
05-24 17:48:15 [INFO] boardgame.StartScreenController.startGame() - Game Started
05-24 17:48:16 [INFO] boardgame.model.BoardGameModel.clickedOnRed() - Clicked on red at (0 5)
05-24 17:48:16 [INFO] boardgame.model.BoardGameModel.makeMove() - Moved from (0 5) to (1 5)
05-24 17:48:17 [INFO] boardgame.model.BoardGameModel.clickedOnBlue() - Clicked on red at (0 5)
05-24 17:48:17 [INFO] boardgame.model.BoardGameModel.makeMove() - Moved from (5 5) to (4 5)
05-24 17:48:17 [INFO] boardgame.model.BoardGameModel.clickedOnRed() - Clicked on red at (1 5)
05-24 17:48:18 [INFO] boardgame.model.BoardGameModel.makeMove() - Moved from (1 5) to (2 5)
05-24 17:48:18 [INFO] boardgame.model.BoardGameModel.clickedOnBlue() - Clicked on red at (1 5)
05-24 17:48:18 [INFO] boardgame.model.BoardGameModel.makeMove() - Moved from (5 6) to (4 6)
05-24 17:48:19 [INFO] boardgame.model.BoardGameModel.clickedOnRed() - Clicked on red at (2 5)
05-24 17:48:19 [INFO] boardgame.model.BoardGameModel.makeMove() - Moved from (2 5) to (3 5)
05-24 17:48:19 [INFO] boardgame.model.BoardGameModel.clickedOnBlue() - Clicked on red at (2 5)
05-24 17:48:19 [INFO] boardgame.model.BoardGameModel.makeMove() - Moved from (4 6) to (3 5)
05-24 17:48:20 [INFO] boardgame.model.BoardGameModel.clickedOnRed() - Clicked on red at (0 6)
05-24 17:48:20 [INFO] boardgame.model.BoardGameModel.makeMove() - Moved from (0 6) to (1 6)
05-24 17:48:20 [INFO] boardgame.model.BoardGameModel.clickedOnBlue() - Clicked on red at (0 6)
05-24 17:48:21 [INFO] boardgame.model.BoardGameModel.makeMove() - Moved from (3 5) to (2 6)
05-24 17:48:21 [INFO] boardgame.model.BoardGameModel.clickedOnRed() - Clicked on red at (1 6)
05-24 17:48:21 [INFO] boardgame.model.BoardGameModel.makeMove() - Moved from (1 6) to (2 6)
05-24 17:48:21 [INFO] boardgame.model.BoardGameModel.clickedOnBlue() - Clicked on red at (1 6)
05-24 17:48:22 [INFO] boardgame.model.BoardGameModel.makeMove() - Moved from (4 5) to (3 5)
05-24 17:48:22 [INFO] boardgame.model.BoardGameModel.clickedOnRed() - Clicked on red at (2 6)
05-24 17:48:22 [INFO] boardgame.model.BoardGameModel.makeMove() - Moved from (2 6) to (3 5)
05-24 17:48:23 [INFO] boardgame.model.BoardGameModel.clickedOnBlue() - Clicked on red at (2 6)
05-24 17:48:23 [INFO] boardgame.model.BoardGameModel.makeMove() - Moved from (5 4) to (4 4)
05-24 17:48:24 [INFO] boardgame.model.BoardGameModel.clickedOnRed() - Clicked on red at (0 3)
05-24 17:48:24 [INFO] boardgame.model.BoardGameModel.makeMove() - Moved from (0 3) to (1 3)
05-24 17:48:25 [INFO] boardgame.model.BoardGameModel.clickedOnBlue() - Clicked on red at (0 3)
05-24 17:48:25 [INFO] boardgame.model.BoardGameModel.makeMove() - Moved from (4 4) to (3 4)
05-24 17:48:25 [INFO] boardgame.model.BoardGameModel.clickedOnRed() - Clicked on red at (1 3)
05-24 17:48:25 [INFO] boardgame.model.BoardGameModel.makeMove() - Moved from (1 3) to (2 3)
05-24 17:48:26 [INFO] boardgame.model.BoardGameModel.clickedOnBlue() - Clicked on red at (1 3)
05-24 17:48:26 [INFO] boardgame.model.BoardGameModel.makeMove() - Moved from (3 4) to (2 3)
05-24 17:48:26 [INFO] boardgame.model.BoardGameModel.clickedOnRed() - Clicked on red at (0 4)
05-24 17:48:27 [INFO] boardgame.model.BoardGameModel.makeMove() - Moved from (0 4) to (1 4)
05-24 17:48:27 [INFO] boardgame.model.BoardGameModel.clickedOnBlue() - Clicked on red at (0 4)
05-24 17:48:27 [INFO] boardgame.model.BoardGameModel.makeMove() - Moved from (2 3) to (1 4)
05-24 17:48:28 [INFO] boardgame.model.BoardGameModel.clickedOnRed() - Clicked on red at (0 2)
05-24 17:48:28 [INFO] boardgame.model.BoardGameModel.makeMove() - Moved from (0 2) to (1 2)
05-24 17:48:29 [INFO] boardgame.model.BoardGameModel.clickedOnBlue() - Clicked on red at (0 2)
05-24 17:48:29 [INFO] boardgame.model.BoardGameModel.makeMove() - Moved from (5 3) to (4 3)
05-24 17:48:30 [INFO] boardgame.model.BoardGameModel.clickedOnRed() - Clicked on red at (1 2)
05-24 17:48:30 [INFO] boardgame.model.BoardGameModel.makeMove() - Moved from (1 2) to (2 2)
05-24 17:48:30 [INFO] boardgame.model.BoardGameModel.clickedOnBlue() - Clicked on red at (1 2)
05-24 17:48:31 [INFO] boardgame.model.BoardGameModel.makeMove() - Moved from (4 3) to (3 3)
05-24 17:48:31 [INFO] boardgame.model.BoardGameModel.clickedOnRed() - Clicked on red at (2 2)
05-24 17:48:31 [INFO] boardgame.model.BoardGameModel.makeMove() - Moved from (2 2) to (3 3)
05-24 17:48:32 [INFO] boardgame.model.BoardGameModel.clickedOnBlue() - Clicked on red at (2 2)
05-24 17:48:32 [INFO] boardgame.model.BoardGameModel.makeMove() - Moved from (5 1) to (4 1)
05-24 17:48:33 [INFO] boardgame.model.BoardGameModel.clickedOnRed() - Clicked on red at (0 1)
05-24 17:48:33 [INFO] boardgame.model.BoardGameModel.makeMove() - Moved from (0 1) to (1 1)
05-24 17:48:33 [INFO] boardgame.model.BoardGameModel.clickedOnBlue() - Clicked on red at (0 1)
05-24 17:48:34 [INFO] boardgame.model.BoardGameModel.makeMove() - Moved from (4 1) to (3 1)
05-24 17:48:34 [INFO] boardgame.model.BoardGameModel.clickedOnRed() - Clicked on red at (1 1)
05-24 17:48:34 [INFO] boardgame.model.BoardGameModel.makeMove() - Moved from (1 1) to (2 1)
05-24 17:48:35 [INFO] boardgame.model.BoardGameModel.clickedOnBlue() - Clicked on red at (1 1)
05-24 17:48:35 [INFO] boardgame.model.BoardGameModel.makeMove() - Moved from (3 1) to (2 1)
05-24 17:48:35 [INFO] boardgame.model.BoardGameModel.clickedOnRed() - Clicked on red at (0 0)
05-24 17:48:36 [INFO] boardgame.model.BoardGameModel.makeMove() - Moved from (0 0) to (1 0)
05-24 17:48:36 [INFO] boardgame.model.BoardGameModel.clickedOnBlue() - Clicked on red at (0 0)
05-24 17:48:36 [INFO] boardgame.model.BoardGameModel.makeMove() - Moved from (2 1) to (1 0)
05-24 17:48:38 [INFO] boardgame.model.BoardGameModel.clickedOnRed() - Clicked on red at (3 3)
05-24 17:48:38 [INFO] boardgame.model.BoardGameModel.makeMove() - Moved from (3 3) to (4 3)
05-24 17:48:39 [INFO] boardgame.model.BoardGameModel.clickedOnBlue() - Clicked on red at (3 3)
05-24 17:48:39 [INFO] boardgame.model.BoardGameModel.makeMove() - Moved from (5 2) to (4 3)
05-24 17:48:40 [INFO] boardgame.model.BoardGameModel.clickedOnRed() - Clicked on red at (3 5)
05-24 17:48:40 [INFO] boardgame.model.BoardGameModel.makeMove() - Moved from (3 5) to (4 5)
05-24 17:48:41 [INFO] boardgame.model.BoardGameModel.clickedOnBlue() - Clicked on red at (3 5)
05-24 17:48:41 [INFO] boardgame.model.BoardGameModel.makeMove() - Moved from (4 3) to (3 3)
05-24 17:48:42 [INFO] boardgame.model.BoardGameModel.clickedOnRed() - Clicked on red at (4 5)
05-24 17:48:42 [INFO] boardgame.model.BoardGameModel.makeMove() - Moved from (4 5) to (5 5)
05-24 17:48:42 [INFO] boardgame.model.BoardGameModel.checkForGameOver() -  == Blue won ==
05-24 17:48:42 [INFO] boardgame.BoardGameController.handleMouseClick() - Unknown:35
05-24 17:48:42 [INFO] boardgame.BoardGameController.jsonWriterGSON() - JSON file created successfully!
05-24 17:48:44 [INFO] boardgame.EndScreenController.jsonReaderGSON() - Blue Player - won in 28 turns
05-24 17:48:44 [INFO] boardgame.EndScreenController.jsonReaderGSON() - Second Player - won in 245 turns
05-24 17:48:44 [INFO] boardgame.EndScreenController.jsonReaderGSON() - Third Player - won in 123 turns
05-24 17:48:44 [INFO] boardgame.EndScreenController.jsonReaderGSON() - Unknown - won in 35 turns
05-24 17:48:44 [INFO] boardgame.BoardGameController.loadEndScreen() - Restarted game
05-24 17:49:12 [INFO] boardgame.EndScreenController.backToStart() - Back to Start Screen
